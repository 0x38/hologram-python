#!/usr/bin/env python

# e303_receive - Hologram Python SDK command line interface (CLI) for inbound messages
#                       via a Huawei E303 modem.
#
# Author: Hologram <support@hologram.io>
#
# Copyright 2016 - Hologram (Konekt, Inc.)
#
# LICENSE: Distributed under the terms of the MIT License

import os
import argparse

script_description = '''
This e303_receive script accepts inbound data by establishing a cellular connection.
'''

def parseArguments():

    parser = argparse.ArgumentParser(description=script_description)

    parser.add_argument('--cloud_id', nargs = '?',
                        help = 'Hologram cloud ID (4 characters long)')

    parser.add_argument('--cloud_key', nargs = '?',
                        help = 'Hologram cloud Key (4 characters long)')

    parser.add_argument('-f', '--file', nargs = '?',
                        help = 'Configuration (HJSON) file that stores the required credentials to send the message to the cloud')

    parser.add_argument('-t', '--timeout', type = int, nargs = '?', default = -1,
                        help = 'The number of seconds before the socket is closed. Default is to block indefinitely.')

    return parser.parse_args()

def main():

    args = parseArguments()

    if args.file:
        data = None
        with open(args.file) as credentials_file:
            data = hjson.load(credentials_file)

        if not args.cloud_id:
            args.cloud_id = data['cloud_id']

        if not args.cloud_key:
            args.cloud_key = data['cloud_key']

    execPath = os.path.dirname(__file__)
    command = 'python ' + execPath + '/cellular_receive --cloud_id ' + str(args.cloud_id) \
              + ' --cloud_key ' + str(args.cloud_key) + ' -m e303'
    print 'command: ' + command
    if args.timeout != -1:
        command = command + ' --timeout ' + args.timeout

    os.system(command)

if __name__ == "__main__": main()
