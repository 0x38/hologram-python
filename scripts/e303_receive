#!/usr/bin/env python

# e303_receive - Hologram Python SDK command line interface (CLI) for inbound messages
#                       via a Huawei E303 modem.
#
# Author: Hologram <support@hologram.io>
#
# Copyright 2016 - Hologram (Konekt, Inc.)
#
# LICENSE: Distributed under the terms of the MIT License

import os
import argparse

script_description = '''
This e303_receive script accepts inbound data by establishing a cellular connection.
'''

def parseArguments():

    parser = argparse.ArgumentParser(description=script_description)

    parser.add_argument('--devicekey', nargs='?', required=True,
                        help = 'Hologram device key (8 characters long)')
    parser.add_argument('-f', '--file', nargs='?',
                        help = 'Configuration (HJSON) file that stores the required credentials to send the message to the cloud')
    parser.add_argument('-v', '--verbose', action='store_true', required=False)
    parser.add_argument('-t', '--timeout', type=int, nargs='?', default=-1,
                        help='The number of seconds before the socket is closed. Default is to block indefinitely.')

    return parser.parse_args()

def main():

    args = parseArguments()

    if args.file:
        data = None
        with open(args.file) as credentials_file:
            data = hjson.load(credentials_file)

        if not args.devicekey:
            args.devicekey = data['devicekey']

    execPath = os.path.dirname(__file__)
    command = 'python ' + execPath + '/cellular_receive --devicekey ' + str(args.devicekey) \
              ' -m e303'

    if args.verbose:
        command = command + ' --verbose'

    if args.timeout != -1:
        command = command + ' --timeout ' + args.timeout

    os.system(command)

if __name__ == "__main__": main()
